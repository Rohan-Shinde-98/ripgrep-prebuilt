parameters:
  target: ''
  gcc_version: ''
  rust_version: 'stable'
  repo: ''
  tag: ''

steps:
- script: |
    set -ex
    REPO=`[ "${{ parameters.repo }}" ] &&  echo ${{ parameters.repo }} || echo $(node -p "require('./config.json').ripgrepRepo")`
    TREEISH=`[ "${{ parameters.tag }}" ] && echo ${{ parameters.tag }} || echo $(node -p "require('./config.json').ripgrepTag")`
    git clone https://github.com/${REPO}.git
    cd ripgrep
    git checkout $TREEISH
  displayName: Clone Ripgrep
- script: build/install.sh
  displayName: Install Rust
  env:
    RUST_VERSION: ${{ parameters.rust_version }}
    TARGET: ${{ parameters.target }}
    GCC_VERSION: ${{ parameters.gcc_version }}
- script: |
    sudo xcode-select -s /Applications/Xcode_12.2.app
  displayName: Switch to Xcode 12
  condition: eq('${{parameters.target}}', 'aarch64-apple-darwin')
- script: ../build/build.sh
  displayName: Build
  workingDirectory: ripgrep
  env:
    TARGET: ${{ parameters.target }}
- script: |
    set -e
    libpcre2_sys=$(find . -name libpcre2_sys*.rlib)
    rg_path=$(find . -name rg)
    otool -L $rg_path
  displayName: Verify library
  workingDirectory: ripgrep
- script: ../build/package.sh
  displayName: Package
  workingDirectory: ripgrep
  env:
    TARGET: ${{ parameters.target }}
    OUT_DIR: .build
- task: PublishPipelineArtifact@0
  displayName: 'Publish Pipeline Artifact'
  inputs:
    artifactName: $(Name)
    targetPath: .build/$(Name)